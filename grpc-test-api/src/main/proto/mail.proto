// явно объявляем использование 3-й версии
syntax = "proto3";

// чтобы классы не были inner в одном общем
option java_multiple_files = true;

// можно указать в каком package будет сгенерирован код
package ru.sberned.grpc.test.api.messaging;
option java_package = "ru.sberned.grpc.test.api.messaging";

// можно добавлять определения из других proto файлов
import "google/protobuf/timestamp.proto";

enum Server {
    PORTAL = 0;
    LS = 1;
    COMPASS = 2;
}

message MailRequest {
  string to = 1;
  string from = 2;
  string subject = 3;
  string content = 4;
  repeated int64 attachmentIds = 5;
  Server server = 6;
}

message MailResponse {
  bool result = 1;
  string info = 2;
}

service MailService {
  rpc send(MailRequest) returns (MailResponse);
}

// chat streaming

message ChatMessage {
    string from = 1;
    string message = 2;
}

message ChatMessageFromServer {
    google.protobuf.Timestamp timestamp = 1;
    ChatMessage message = 2;
}

service ChatService {
    // двусторонний streaming
    rpc chat(stream ChatMessage) returns (stream ChatMessageFromServer);
}

/*
могут быть разные сложные типы

map<string, string> bagOfStrings = 4;
*/